CSS Grid

A grid layout consists of a parent element, with one or more child elements.

<div class="grid-container">
  <div class="grid-item">1</div>
  <div class="grid-item">2</div>
  <div class="grid-item">3</div>
  <div class="grid-item">4</div>
  <div class="grid-item">5</div>
  <div class="grid-item">6</div>
  <div class="grid-item">7</div>
  <div class="grid-item">8</div>
  <div class="grid-item">9</div>
</div>




DISPLAY
An HTML element becomes a grid container when its display property is set to grid or inline-grid.

.grid-container {
  display: grid;
}

or

.grid-container {
  display: grid;
}




All direct children of the grid container automatically become grid items.



The vertical lines of grid items are called columns.
The horizontal lines of grid items are called rows.
The spaces between each column/row are called gaps.

.grid-container {
  display: grid;
  grid-column-gap: 50px;
  grid-row-gap: 50px;
}

The grid-gap property is a shorthand property for the grid-row-gap and the grid-column-gap properties:
.grid-container {
  display: grid;
  grid-gap: 50px 100px;      (or if same gap for both, just give one measurement)
}




Refer to line numbers when placing a grid item in a grid container:
.item1 {
  grid-column-start: 1;
  grid-column-end: 3;
}

Place a grid item at row line 1, and let it end on row line 3:
.item1 {
  grid-row-start: 1;
  grid-row-end: 3;
}




GRID CONTAINER

To make an HTML element behave as a grid container, you have to set the display property to grid or inline-grid.

Grid containers consist of grid items, placed inside columns and rows.

COLUMNS
The grid-template-columns property defines the number of columns in your grid layout, and it can define the width of each column.

The value is a space-separated-list, where each value defines the length of the respective column.

If you want your grid layout to contain 4 columns, specify the width of the 4 columns, or "auto" if all columns should have the same width.


.grid-container {
  display: grid;
  grid-template-columns: auto auto auto auto;
}

.grid-container {
  display: grid;
  grid-template-columns: 80px 200px auto 40px;
}

Note: If you have more than 4 items in a 4 columns grid, the grid will automatically add a new row to put the items in.


ROWS
The grid-template-rows property defines the height of each row.
The value is a space-separated-list, where each value defines the height of the respective row:

.grid-container {
  display: grid;
  grid-template-rows: 80px 200px;
}



JUSTIFY-CONTENT
The justify-content property is used to align the whole grid inside the container.

Note: The grid's total width has to be less than the container's width for the justify-content property to have any effect.

.grid-container {
  display: grid;
  justify-content: space-evenly; ( or space-around; space-between; center; start; end;)
}

.grid-container {
  display: grid;
  justify-content: space-around;
}

.grid-container {
  display: grid;
  justify-content: space-between;
}

ALIGN-CONTENT
The align-content property is used to vertically align the whole grid inside the container.
Note: The grid's total height has to be less than the container's height for the align-content property to have any effect.

.grid-container {
  display: grid;
  height: 400px;
  align-content: center;	(or space-evenly; space-around; space-between; start; end;
}






GRID ITEMS

Child Elements (Items)
A grid container contains grid items.

By default, a container has one grid item for each column, in each row, but you can style the grid items so that they will span multiple columns and/or rows.
